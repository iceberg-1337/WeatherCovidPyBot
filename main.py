import telebot
import pyowm

from pyowm.utils.config import get_default_config

from wearher import get_weather

from telebot import types

from covid import get_covid

bot = telebot.TeleBot('1655397111:AAGOqLwVAicRXDlvic8nYvJ9gSPhBgDV1xc')     #token

config_dict = get_default_config()
config_dict['language'] = 'ru'
owm = pyowm.OWM('4d21785a4841673ea7889b3d412f2681', config_dict)
mgr = owm.weather_manager()

@bot.message_handler(commands=['start'])
def welcome(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True,one_time_keyboard=True)
    item1 = types.KeyboardButton('‚òÅ –£–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É ‚òÄ')
    item2 = types.KeyboardButton('ü¶† –£–∑–Ω–∞—Ç—å –ø—Ä–æ Covid-19 ü¶†')

    markup.add(item1, item2)

    sti = open('static/AnimatedSticker.tgs', 'rb')
    bot.send_sticker(message.chat.id, sti)

    bot.send_message(message.chat.id,
    "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {0.first_name}!\n–Ø - <b>{1.first_name}</b>, –±–æ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã–π —á—Ç–æ–±—ã –±—ã—Ç—å –ø–æ–¥–æ–ø—ã—Ç–Ω—ã–º –∫—Ä–æ–ª–∏–∫–æ–º. \n —á—Ç–æ –∂–µ–ª–∞–µ—Ç–µ —Å–¥–µ–ª–∞—Ç—å".format(
    message.from_user, bot.get_me()),
    parse_mode='html', reply_markup=markup)
    bot.register_next_step_handler(message, action)


def action(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    btn1 = types.KeyboardButton('–í–æ –≤—Å—ë–º –º–∏—Ä–µ')
    btn2 = types.KeyboardButton('–£–∫—Ä–∞–∏–Ω–∞')
    btn3 = types.KeyboardButton('–†–æ—Å—Å–∏—è')
    btn4 = types.KeyboardButton('–ë–µ–ª–∞—Ä—É—Å—å')
    markup.add(btn1, btn2, btn3, btn4)

    if message.chat.type == 'private':
        if message.text == '‚òÅ –£–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É ‚òÄ':
            bot.send_message(message.from_user.id, '–≤ –∫–∞–∫–æ–º –≥–æ—Ä–æ–¥–µ')
            bot.register_next_step_handler(message, get_weather)
        elif message.text == 'ü¶† –£–∑–Ω–∞—Ç—å –ø—Ä–æ Covid-19 ü¶†':
            send_message = f'–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –Ω–∞–ø–∏—à–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É\n –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É –∏–∑ —Å–ø–∏—Å–∫–∞'
            bot.send_message(message.from_user.id, send_message, parse_mode='html', reply_markup=markup)
            bot.register_next_step_handler(message, get_covid)
        else:
            bot.send_message(message.chat.id, '–Ø –Ω–µ –∑–Ω–∞—é —á—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç—å üò¢')

# Enable saving next step handlers to file "./.handlers-saves/step.save".
# Delay=2 means that after any change in next step handlers (e.g. calling register_next_step_handler())
# saving will hapen after delay 2 seconds.
bot.enable_save_next_step_handlers(delay=2)

# Load next_step_handlers from save file (default "./.handlers-saves/step.save")
# WARNING It will work only if enable_save_next_step_handlers was called!
bot.load_next_step_handlers()

# RUN
bot.polling(none_stop=True)